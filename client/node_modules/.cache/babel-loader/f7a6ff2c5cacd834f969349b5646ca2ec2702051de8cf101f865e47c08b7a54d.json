{"ast":null,"code":"var _jsxFileName = \"/app/src/components/AccountForm.jsx\",\n  _s = $RefreshSig$();\n// AccountForm.jsx\nimport React, { useState, useContext } from \"react\";\nimport { AccountContext } from \"../context/AccountContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountForm = ({\n  accountType = \"standard\",\n  initialData = null,\n  onSave,\n  onCancel\n}) => {\n  _s();\n  const {\n    createStandardAccount,\n    createCreditAccount,\n    createLoan,\n    createInvestmentAccount,\n    updateStandardAccount,\n    updateCreditAccount,\n    updateLoan,\n    updateInvestmentAccount\n  } = useContext(AccountContext);\n\n  // Set up initial form state based on account type and whether we're editing\n  const getInitialFormState = () => {\n    const isEditing = !!initialData;\n    if (accountType === \"standard\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        type: isEditing ? initialData.type : \"checking\",\n        balance: isEditing ? initialData.balance : 0\n      };\n    } else if (accountType === \"credit\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        balance: isEditing ? initialData.balance : 0,\n        credit_limit: isEditing ? initialData.credit_limit : 0,\n        interest_rate: isEditing ? initialData.interest_rate : 0\n      };\n    } else if (accountType === \"loan\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        balance: isEditing ? initialData.balance : 0,\n        interest_rate: isEditing ? initialData.interest_rate : 0,\n        term_months: isEditing ? initialData.term_months : 12\n      };\n    } else if (accountType === \"investment\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        type: isEditing ? initialData.type : \"ira\",\n        balance: isEditing ? initialData.balance : 0\n      };\n    }\n  };\n  const [formData, setFormData] = useState(getInitialFormState());\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Handle form input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Convert numeric values\n    if ([\"balance\", \"credit_limit\", \"interest_rate\", \"term_months\"].includes(name)) {\n      setFormData({\n        ...formData,\n        [name]: parseFloat(value)\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    try {\n      const isEditing = !!initialData;\n      let result;\n\n      // Create or update account based on type\n      if (accountType === \"standard\") {\n        if (isEditing) {\n          result = await updateStandardAccount(initialData.id, formData);\n        } else {\n          result = await createStandardAccount(formData);\n        }\n      } else if (accountType === \"credit\") {\n        if (isEditing) {\n          result = await updateCreditAccount(initialData.id, formData);\n        } else {\n          result = await createCreditAccount(formData);\n        }\n      } else if (accountType === \"loan\") {\n        if (isEditing) {\n          result = await updateLoan(initialData.id, formData);\n        } else {\n          result = await createLoan(formData);\n        }\n      } else if (accountType === \"investment\") {\n        if (isEditing) {\n          result = await updateInvestmentAccount(initialData.id, formData);\n        } else {\n          result = await createInvestmentAccount(formData);\n        }\n      }\n\n      // Call the save callback with the result\n      if (onSave) onSave(result);\n    } catch (err) {\n      setError(err.message || \"Failed to save account. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Render different form fields based on account type\n  const renderAccountTypeFields = () => {\n    switch (accountType) {\n      case \"standard\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"type\",\n              children: \"Account Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"type\",\n              name: \"type\",\n              value: formData.type,\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"checking\",\n                children: \"Checking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"savings\",\n                children: \"Savings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cash\",\n                children: \"Cash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      case \"credit\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"credit_limit\",\n              children: \"Credit Limit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"credit_limit\",\n              name: \"credit_limit\",\n              value: formData.credit_limit,\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true,\n              min: \"0\",\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"interest_rate\",\n              children: \"Interest Rate (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"interest_rate\",\n              name: \"interest_rate\",\n              value: formData.interest_rate,\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true,\n              min: \"0\",\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case \"loan\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"interest_rate\",\n              children: \"Interest Rate (%)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"interest_rate\",\n              name: \"interest_rate\",\n              value: formData.interest_rate,\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true,\n              min: \"0\",\n              step: \"0.01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"term_months\",\n              children: \"Term (months)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"term_months\",\n              name: \"term_months\",\n              value: formData.term_months,\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true,\n              min: \"1\",\n              step: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case \"investment\":\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              htmlFor: \"type\",\n              children: \"Investment Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"type\",\n              name: \"type\",\n              value: formData.type,\n              onChange: handleChange,\n              className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ira\",\n                children: \"IRA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"401k\",\n                children: \"401(k)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"brokerage\",\n                children: \"Brokerage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"stock\",\n                children: \"Stock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"crypto\",\n                children: \"Cryptocurrency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false);\n      default:\n        return null;\n    }\n  };\n\n  // Get form title based on account type and whether we're editing\n  const getFormTitle = () => {\n    const action = initialData ? \"Edit\" : \"Add\";\n    switch (accountType) {\n      case \"standard\":\n        return `${action} Account`;\n      case \"credit\":\n        return `${action} Credit Card`;\n      case \"loan\":\n        return `${action} Loan`;\n      case \"investment\":\n        return `${action} Investment Account`;\n      default:\n        return `${action} Account`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: getFormTitle()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-red-100 text-red-700 rounded-md\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          htmlFor: \"balance\",\n          children: \"Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"balance\",\n          name: \"balance\",\n          value: formData.balance,\n          onChange: handleChange,\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n          required: true,\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), renderAccountTypeFields(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end\",\n        children: [onCancel && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          className: \"mr-2 bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\",\n          disabled: loading,\n          children: loading ? \"Saving...\" : \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountForm, \"D0FSxXKI86BtfFetbFo+CvbtC+8=\");\n_c = AccountForm;\nexport default AccountForm;\nvar _c;\n$RefreshReg$(_c, \"AccountForm\");","map":{"version":3,"names":["React","useState","useContext","AccountContext","jsxDEV","_jsxDEV","Fragment","_Fragment","AccountForm","accountType","initialData","onSave","onCancel","_s","createStandardAccount","createCreditAccount","createLoan","createInvestmentAccount","updateStandardAccount","updateCreditAccount","updateLoan","updateInvestmentAccount","getInitialFormState","isEditing","name","type","balance","credit_limit","interest_rate","term_months","formData","setFormData","error","setError","loading","setLoading","handleChange","e","value","target","includes","parseFloat","handleSubmit","preventDefault","result","id","err","message","renderAccountTypeFields","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","min","step","getFormTitle","action","onSubmit","onClick","disabled","_c","$RefreshReg$"],"sources":["/app/src/components/AccountForm.jsx"],"sourcesContent":["// AccountForm.jsx\nimport React, { useState, useContext } from \"react\";\nimport { AccountContext } from \"../context/AccountContext\";\n\nconst AccountForm = ({\n  accountType = \"standard\",\n  initialData = null,\n  onSave,\n  onCancel,\n}) => {\n  const {\n    createStandardAccount,\n    createCreditAccount,\n    createLoan,\n    createInvestmentAccount,\n    updateStandardAccount,\n    updateCreditAccount,\n    updateLoan,\n    updateInvestmentAccount,\n  } = useContext(AccountContext);\n\n  // Set up initial form state based on account type and whether we're editing\n  const getInitialFormState = () => {\n    const isEditing = !!initialData;\n\n    if (accountType === \"standard\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        type: isEditing ? initialData.type : \"checking\",\n        balance: isEditing ? initialData.balance : 0,\n      };\n    } else if (accountType === \"credit\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        balance: isEditing ? initialData.balance : 0,\n        credit_limit: isEditing ? initialData.credit_limit : 0,\n        interest_rate: isEditing ? initialData.interest_rate : 0,\n      };\n    } else if (accountType === \"loan\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        balance: isEditing ? initialData.balance : 0,\n        interest_rate: isEditing ? initialData.interest_rate : 0,\n        term_months: isEditing ? initialData.term_months : 12,\n      };\n    } else if (accountType === \"investment\") {\n      return {\n        name: isEditing ? initialData.name : \"\",\n        type: isEditing ? initialData.type : \"ira\",\n        balance: isEditing ? initialData.balance : 0,\n      };\n    }\n  };\n\n  const [formData, setFormData] = useState(getInitialFormState());\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  // Handle form input changes\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    // Convert numeric values\n    if (\n      [\"balance\", \"credit_limit\", \"interest_rate\", \"term_months\"].includes(name)\n    ) {\n      setFormData({\n        ...formData,\n        [name]: parseFloat(value),\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value,\n      });\n    }\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const isEditing = !!initialData;\n      let result;\n\n      // Create or update account based on type\n      if (accountType === \"standard\") {\n        if (isEditing) {\n          result = await updateStandardAccount(initialData.id, formData);\n        } else {\n          result = await createStandardAccount(formData);\n        }\n      } else if (accountType === \"credit\") {\n        if (isEditing) {\n          result = await updateCreditAccount(initialData.id, formData);\n        } else {\n          result = await createCreditAccount(formData);\n        }\n      } else if (accountType === \"loan\") {\n        if (isEditing) {\n          result = await updateLoan(initialData.id, formData);\n        } else {\n          result = await createLoan(formData);\n        }\n      } else if (accountType === \"investment\") {\n        if (isEditing) {\n          result = await updateInvestmentAccount(initialData.id, formData);\n        } else {\n          result = await createInvestmentAccount(formData);\n        }\n      }\n\n      // Call the save callback with the result\n      if (onSave) onSave(result);\n    } catch (err) {\n      setError(err.message || \"Failed to save account. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Render different form fields based on account type\n  const renderAccountTypeFields = () => {\n    switch (accountType) {\n      case \"standard\":\n        return (\n          <>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"type\"\n              >\n                Account Type\n              </label>\n              <select\n                id=\"type\"\n                name=\"type\"\n                value={formData.type}\n                onChange={handleChange}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                required\n              >\n                <option value=\"checking\">Checking</option>\n                <option value=\"savings\">Savings</option>\n                <option value=\"cash\">Cash</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </div>\n          </>\n        );\n      case \"credit\":\n        return (\n          <>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"credit_limit\"\n              >\n                Credit Limit\n              </label>\n              <input\n                type=\"number\"\n                id=\"credit_limit\"\n                name=\"credit_limit\"\n                value={formData.credit_limit}\n                onChange={handleChange}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                required\n                min=\"0\"\n                step=\"0.01\"\n              />\n            </div>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"interest_rate\"\n              >\n                Interest Rate (%)\n              </label>\n              <input\n                type=\"number\"\n                id=\"interest_rate\"\n                name=\"interest_rate\"\n                value={formData.interest_rate}\n                onChange={handleChange}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                required\n                min=\"0\"\n                step=\"0.01\"\n              />\n            </div>\n          </>\n        );\n      case \"loan\":\n        return (\n          <>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"interest_rate\"\n              >\n                Interest Rate (%)\n              </label>\n              <input\n                type=\"number\"\n                id=\"interest_rate\"\n                name=\"interest_rate\"\n                value={formData.interest_rate}\n                onChange={handleChange}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                required\n                min=\"0\"\n                step=\"0.01\"\n              />\n            </div>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"term_months\"\n              >\n                Term (months)\n              </label>\n              <input\n                type=\"number\"\n                id=\"term_months\"\n                name=\"term_months\"\n                value={formData.term_months}\n                onChange={handleChange}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                required\n                min=\"1\"\n                step=\"1\"\n              />\n            </div>\n          </>\n        );\n      case \"investment\":\n        return (\n          <>\n            <div className=\"mb-4\">\n              <label\n                className=\"block text-gray-700 text-sm font-bold mb-2\"\n                htmlFor=\"type\"\n              >\n                Investment Type\n              </label>\n              <select\n                id=\"type\"\n                name=\"type\"\n                value={formData.type}\n                onChange={handleChange}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                required\n              >\n                <option value=\"ira\">IRA</option>\n                <option value=\"401k\">401(k)</option>\n                <option value=\"brokerage\">Brokerage</option>\n                <option value=\"stock\">Stock</option>\n                <option value=\"crypto\">Cryptocurrency</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </div>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Get form title based on account type and whether we're editing\n  const getFormTitle = () => {\n    const action = initialData ? \"Edit\" : \"Add\";\n    switch (accountType) {\n      case \"standard\":\n        return `${action} Account`;\n      case \"credit\":\n        return `${action} Credit Card`;\n      case \"loan\":\n        return `${action} Loan`;\n      case \"investment\":\n        return `${action} Investment Account`;\n      default:\n        return `${action} Account`;\n    }\n  };\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md\">\n      <h2 className=\"text-xl font-semibold mb-4\">{getFormTitle()}</h2>\n\n      {error && (\n        <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded-md\">\n          {error}\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"name\"\n          >\n            Name\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            required\n          />\n        </div>\n\n        <div className=\"mb-4\">\n          <label\n            className=\"block text-gray-700 text-sm font-bold mb-2\"\n            htmlFor=\"balance\"\n          >\n            Balance\n          </label>\n          <input\n            type=\"number\"\n            id=\"balance\"\n            name=\"balance\"\n            value={formData.balance}\n            onChange={handleChange}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            required\n            step=\"0.01\"\n          />\n        </div>\n\n        {renderAccountTypeFields()}\n\n        <div className=\"flex justify-end\">\n          {onCancel && (\n            <button\n              type=\"button\"\n              onClick={onCancel}\n              className=\"mr-2 bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            >\n              Cancel\n            </button>\n          )}\n          <button\n            type=\"submit\"\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n            disabled={loading}\n          >\n            {loading ? \"Saving...\" : \"Save\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AccountForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}