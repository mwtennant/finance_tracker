{"ast":null,"code":"var _jsxFileName = \"/Users/matthewwtennant/Documents/Code/finance_tracker/v_01/finance_tracker/client/src/context/PlanContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// PlanContext.js\nimport React, { createContext, useContext, useState } from 'react';\n\n// Context for storing and accessing financial plan data across components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlanContext = /*#__PURE__*/createContext();\n\n// Sample data that was previously duplicated across components\nconst initialPlans = [{\n  id: \"plan1\",\n  name: \"Retirement Plan\",\n  description: \"Planning for retirement at age 65\",\n  target: 1500000,\n  currentSavings: 250000,\n  monthlyContribution: 1000,\n  created: \"2023-01-15\",\n  lastUpdated: \"2023-05-20\",\n  includedAccounts: [{\n    id: \"acct1\",\n    name: \"401(k)\",\n    balance: 175000,\n    type: \"retirement\"\n  }, {\n    id: \"acct2\",\n    name: \"IRA\",\n    balance: 75000,\n    type: \"retirement\"\n  }],\n  includedLoans: [],\n  includedCreditCards: [],\n  includedInvestmentAccounts: [{\n    id: \"inv1\",\n    name: \"Brokerage Account\",\n    balance: 50000,\n    type: \"stocks\"\n  }]\n}, {\n  id: \"plan2\",\n  name: \"Home Purchase\",\n  description: \"Saving for down payment on a house\",\n  target: 100000,\n  currentSavings: 35000,\n  monthlyContribution: 1500,\n  created: \"2023-02-20\",\n  lastUpdated: \"2023-05-18\",\n  includedAccounts: [{\n    id: \"acct3\",\n    name: \"High-Yield Savings\",\n    balance: 35000,\n    type: \"savings\"\n  }],\n  includedLoans: [],\n  includedCreditCards: [],\n  includedInvestmentAccounts: []\n}, {\n  id: \"plan3\",\n  name: \"Debt Payoff Plan\",\n  description: \"Paying off all debts within 5 years\",\n  target: 0,\n  currentSavings: 5000,\n  monthlyContribution: 2000,\n  created: \"2023-03-10\",\n  lastUpdated: \"2023-05-15\",\n  includedAccounts: [{\n    id: \"acct4\",\n    name: \"Emergency Fund\",\n    balance: 5000,\n    type: \"savings\"\n  }],\n  includedLoans: [{\n    id: \"loan1\",\n    name: \"Student Loan\",\n    balance: 25000,\n    interestRate: 4.5,\n    minimumPayment: 300\n  }, {\n    id: \"loan2\",\n    name: \"Car Loan\",\n    balance: 15000,\n    interestRate: 3.9,\n    minimumPayment: 400\n  }],\n  includedCreditCards: [{\n    id: \"cc1\",\n    name: \"Credit Card 1\",\n    balance: 5000,\n    interestRate: 19.99,\n    minimumPayment: 150\n  }],\n  includedInvestmentAccounts: []\n}];\n\n// Provider component that makes plan data available to any child component\nexport const PlanProvider = ({\n  children\n}) => {\n  _s();\n  const [plans, setPlans] = useState(initialPlans);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get a single plan by ID\n  const getPlan = id => {\n    return plans.find(plan => plan.id === id) || null;\n  };\n\n  // Add a new plan\n  const addPlan = plan => {\n    setPlans([...plans, {\n      ...plan,\n      id: `plan${plans.length + 1}`,\n      created: new Date().toISOString(),\n      lastUpdated: new Date().toISOString()\n    }]);\n  };\n\n  // Update an existing plan\n  const updatePlan = (id, updatedPlan) => {\n    setPlans(plans.map(plan => plan.id === id ? {\n      ...updatedPlan,\n      lastUpdated: new Date().toISOString()\n    } : plan));\n  };\n\n  // Delete a plan\n  const deletePlan = id => {\n    setPlans(plans.filter(plan => plan.id !== id));\n  };\n\n  // In the future, these functions would interact with an API\n  // For now, they're just manipulating local state\n\n  return /*#__PURE__*/_jsxDEV(PlanContext.Provider, {\n    value: {\n      plans,\n      loading,\n      error,\n      getPlan,\n      addPlan,\n      updatePlan,\n      deletePlan\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the plan context\n_s(PlanProvider, \"J+SwlY4t/5TK1zx5QRfMOij/Sk8=\");\n_c = PlanProvider;\nexport const usePlans = () => {\n  _s2();\n  const context = useContext(PlanContext);\n  if (context === undefined) {\n    throw new Error('usePlans must be used within a PlanProvider');\n  }\n  return context;\n};\n_s2(usePlans, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default PlanContext;\nvar _c;\n$RefreshReg$(_c, \"PlanProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","PlanContext","initialPlans","id","name","description","target","currentSavings","monthlyContribution","created","lastUpdated","includedAccounts","balance","type","includedLoans","includedCreditCards","includedInvestmentAccounts","interestRate","minimumPayment","PlanProvider","children","_s","plans","setPlans","loading","setLoading","error","setError","getPlan","find","plan","addPlan","length","Date","toISOString","updatePlan","updatedPlan","map","deletePlan","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePlans","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/matthewwtennant/Documents/Code/finance_tracker/v_01/finance_tracker/client/src/context/PlanContext.js"],"sourcesContent":["// PlanContext.js\nimport React, { createContext, useContext, useState } from 'react';\n\n// Context for storing and accessing financial plan data across components\nconst PlanContext = createContext();\n\n// Sample data that was previously duplicated across components\nconst initialPlans = [\n  {\n    id: \"plan1\",\n    name: \"Retirement Plan\",\n    description: \"Planning for retirement at age 65\",\n    target: 1500000,\n    currentSavings: 250000,\n    monthlyContribution: 1000,\n    created: \"2023-01-15\",\n    lastUpdated: \"2023-05-20\",\n    includedAccounts: [\n      { id: \"acct1\", name: \"401(k)\", balance: 175000, type: \"retirement\" },\n      { id: \"acct2\", name: \"IRA\", balance: 75000, type: \"retirement\" }\n    ],\n    includedLoans: [],\n    includedCreditCards: [],\n    includedInvestmentAccounts: [\n      { id: \"inv1\", name: \"Brokerage Account\", balance: 50000, type: \"stocks\" }\n    ]\n  },\n  {\n    id: \"plan2\",\n    name: \"Home Purchase\",\n    description: \"Saving for down payment on a house\",\n    target: 100000,\n    currentSavings: 35000,\n    monthlyContribution: 1500,\n    created: \"2023-02-20\",\n    lastUpdated: \"2023-05-18\",\n    includedAccounts: [\n      { id: \"acct3\", name: \"High-Yield Savings\", balance: 35000, type: \"savings\" }\n    ],\n    includedLoans: [],\n    includedCreditCards: [],\n    includedInvestmentAccounts: []\n  },\n  {\n    id: \"plan3\",\n    name: \"Debt Payoff Plan\",\n    description: \"Paying off all debts within 5 years\",\n    target: 0,\n    currentSavings: 5000,\n    monthlyContribution: 2000,\n    created: \"2023-03-10\",\n    lastUpdated: \"2023-05-15\",\n    includedAccounts: [\n      { id: \"acct4\", name: \"Emergency Fund\", balance: 5000, type: \"savings\" }\n    ],\n    includedLoans: [\n      { id: \"loan1\", name: \"Student Loan\", balance: 25000, interestRate: 4.5, minimumPayment: 300 },\n      { id: \"loan2\", name: \"Car Loan\", balance: 15000, interestRate: 3.9, minimumPayment: 400 }\n    ],\n    includedCreditCards: [\n      { id: \"cc1\", name: \"Credit Card 1\", balance: 5000, interestRate: 19.99, minimumPayment: 150 }\n    ],\n    includedInvestmentAccounts: []\n  }\n];\n\n// Provider component that makes plan data available to any child component\nexport const PlanProvider = ({ children }) => {\n  const [plans, setPlans] = useState(initialPlans);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Get a single plan by ID\n  const getPlan = (id) => {\n    return plans.find(plan => plan.id === id) || null;\n  };\n\n  // Add a new plan\n  const addPlan = (plan) => {\n    setPlans([...plans, { ...plan, id: `plan${plans.length + 1}`, created: new Date().toISOString(), lastUpdated: new Date().toISOString() }]);\n  };\n\n  // Update an existing plan\n  const updatePlan = (id, updatedPlan) => {\n    setPlans(plans.map(plan => \n      plan.id === id ? { ...updatedPlan, lastUpdated: new Date().toISOString() } : plan\n    ));\n  };\n\n  // Delete a plan\n  const deletePlan = (id) => {\n    setPlans(plans.filter(plan => plan.id !== id));\n  };\n\n  // In the future, these functions would interact with an API\n  // For now, they're just manipulating local state\n\n  return (\n    <PlanContext.Provider value={{\n      plans,\n      loading,\n      error,\n      getPlan,\n      addPlan,\n      updatePlan,\n      deletePlan\n    }}>\n      {children}\n    </PlanContext.Provider>\n  );\n};\n\n// Custom hook to use the plan context\nexport const usePlans = () => {\n  const context = useContext(PlanContext);\n  if (context === undefined) {\n    throw new Error('usePlans must be used within a PlanProvider');\n  }\n  return context;\n};\n\nexport default PlanContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}